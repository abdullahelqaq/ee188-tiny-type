{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahelqaq/Dropbox/UCLA/Spring 2021/ECE 188/Testing/React/tiny-type/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => props.onClick(),\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cell;\n\nfunction MainGrid(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      value: 'qwe',\n      onClick: () => props.handleClick(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'rtyu',\n      onClick: () => props.handleClick(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'iop',\n      onClick: () => props.handleClick(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'asd',\n      onClick: () => props.handleClick(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'fgh',\n      onClick: () => props.handleClick(4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'jkl',\n      onClick: () => props.handleClick(5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'zxc',\n      onClick: () => props.handleClick(6)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'vb',\n      onClick: () => props.handleClick(7)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      value: 'nm',\n      onClick: () => props.handleClick(8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = MainGrid;\n\nfunction renderCharCells(letters, eventListener) {\n  var num_chars = 4;\n  if (letters[2] === '0') num_chars = 2;else if (letters[3] === '0') num_chars = 3;\n  var cells = [];\n\n  for (let i = 0; i < num_chars; i++) {\n    cells.push( /*#__PURE__*/_jsxDEV(Cell, {\n      value: letters[i],\n      onClick: () => eventListener(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  }\n\n  return cells;\n}\n\nfunction CharGroupGrid(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      value: \"hmm\",\n      onClick: () => props.handleClick(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), renderCharCells(props.chars, props.handleClick)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = CharGroupGrid;\n\nclass Keyboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: 'init',\n      letter_group: null,\n      all_char_groups: ['qwe', 'rtyu', 'iop', 'asd', 'fgh', 'jkl', 'zxc', 'vb', 'nm']\n    };\n  }\n\n  handleMainGridClick(i) {\n    this.setState({\n      word: this.state.word,\n      letter_group: i,\n      all_char_groups: this.state.all_char_groups\n    });\n  }\n\n  handleCharGridClick(i) {\n    /*\n    this.setState({\n      word: this.state.word + this.state.all_char_groups[this.state.letter_group][i],\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n    });\n    */\n  }\n\n  resetCharGroup() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups\n    });\n  }\n\n  clearWord() {\n    this.setState({\n      word: '',\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups\n    });\n  }\n\n  delChar() {\n    this.setState({\n      word: this.state.word.length > 0 ? this.state.word.slice(0, -1) : '',\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups\n    });\n  }\n\n  addSpace() {\n    this.setState({\n      word: this.state.word + ' ',\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups\n    });\n  }\n\n  renderCharGroup() {\n    var letters = Array(4).fill('0');\n\n    switch (this.state.letter_group) {\n      case 1:\n        letters[0] = this.state.all_char_groups[1][0];\n        letters[1] = this.state.all_char_groups[1][1];\n        letters[2] = this.state.all_char_groups[1][2];\n        letters[3] = this.state.all_char_groups[1][3];\n        break;\n\n      case 7:\n      case 8:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        break;\n\n      default:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        letters[2] = this.state.all_char_groups[this.state.letter_group][2];\n    }\n\n    return /*#__PURE__*/_jsxDEV(CharGroupGrid, {\n      chars: letters,\n      handleClick: this.handleCharGridClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    if (this.state.letter_group != null) {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard\",\n          onClick: () => this.resetCharGroup(),\n          children: this.renderCharGroup()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_buttons\",\n            onClick: () => this.clearWord(),\n            children: \"clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"top_buttons\",\n            onClick: () => this.delChar(),\n            children: \"del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MainGrid, {\n            handleClick: this.handleMainGridClick.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"space_button\",\n            onClick: () => this.addSpace(),\n            children: \"space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"current_word\",\n          children: this.state.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 213,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"MainGrid\");\n$RefreshReg$(_c3, \"CharGroupGrid\");","map":{"version":3,"sources":["/Users/abdullahelqaq/Dropbox/UCLA/Spring 2021/ECE 188/Testing/React/tiny-type/src/index.js"],"names":["React","ReactDOM","Cell","props","onClick","value","MainGrid","handleClick","renderCharCells","letters","eventListener","num_chars","cells","i","push","CharGroupGrid","chars","Keyboard","Component","constructor","state","word","letter_group","all_char_groups","handleMainGridClick","setState","handleCharGridClick","resetCharGroup","clearWord","delChar","length","slice","addSpace","renderCharGroup","Array","fill","render","bind","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Cell(props) {\n  return (\n    <button onClick={() => props.onClick()}>{props.value}</button>\n  );\n}\n\nfunction MainGrid(props) {\n  return (\n    <div class=\"grid\">\n      <Cell\n        value={'qwe'}\n        onClick={() => props.handleClick(0)}\n      />\n      <Cell\n        value={'rtyu'}\n        onClick={() => props.handleClick(1)}\n      />\n      <Cell\n        value={'iop'}\n        onClick={() => props.handleClick(2)}\n      />\n      <Cell\n        value={'asd'}\n        onClick={() => props.handleClick(3)}\n      />\n      <Cell\n        value={'fgh'}\n        onClick={() => props.handleClick(4)}\n      />\n      <Cell\n        value={'jkl'}\n        onClick={() => props.handleClick(5)}\n      />\n      <Cell\n        value={'zxc'}\n        onClick={() => props.handleClick(6)}\n      />\n      <Cell\n        value={'vb'}\n        onClick={() => props.handleClick(7)}\n      />\n      <Cell\n        value={'nm'}\n        onClick={() => props.handleClick(8)}\n      />\n    </div>\n  );\n}\n\nfunction renderCharCells(letters, eventListener) {\n  var num_chars = 4;\n  if (letters[2] === '0')\n    num_chars = 2;\n  else if (letters[3] === '0')\n    num_chars = 3;\n\n  var cells = [];\n  for (let i = 0; i < num_chars; i++) {\n    cells.push(\n      <Cell\n        value={letters[i]}\n        onClick={() => eventListener(i)}\n      />\n    );\n  }\n  return cells;\n}\n\nfunction CharGroupGrid(props) {\n  return (\n    <div class=\"grid\">\n      <Cell\n        value='hmm'\n        onClick={() => props.handleClick(1)}\n      />\n      {renderCharCells(props.chars, props.handleClick)}\n    </div>\n  );\n}\n\nclass Keyboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: 'init',\n      letter_group: null,\n      all_char_groups: ['qwe', 'rtyu', 'iop', 'asd', 'fgh', 'jkl', 'zxc', 'vb', 'nm'],\n    };\n  }\n  \n  handleMainGridClick(i) {\n    this.setState({\n      word: this.state.word,\n      letter_group: i,\n      all_char_groups:  this.state.all_char_groups,\n    });\n  }\n\n  handleCharGridClick(i) {\n    /*\n    this.setState({\n      word: this.state.word + this.state.all_char_groups[this.state.letter_group][i],\n      letter_group: null,\n      all_char_groups: this.state.all_char_groups,\n    });\n    */\n  }\n\n  resetCharGroup() {\n    this.setState({\n      word: this.state.word,\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n    });\n  }\n\n  clearWord() {\n    this.setState({\n      word: '',\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n    })\n  }\n\n  delChar() {\n    this.setState({\n      word: this.state.word.length > 0 ? this.state.word.slice(0, -1) : '',\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n    });\n  }\n\n  addSpace() {\n    this.setState({\n      word: this.state.word + ' ',\n      letter_group: null,\n      all_char_groups:  this.state.all_char_groups,\n    });\n  }\n\n  renderCharGroup() {\n    var letters = Array(4).fill('0');\n\n    switch (this.state.letter_group) {\n      case 1:\n        letters[0] = this.state.all_char_groups[1][0];\n        letters[1] = this.state.all_char_groups[1][1];\n        letters[2] = this.state.all_char_groups[1][2];\n        letters[3] = this.state.all_char_groups[1][3];\n        break;\n      case 7:\n      case 8:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        break;\n      default:\n        letters[0] = this.state.all_char_groups[this.state.letter_group][0];\n        letters[1] = this.state.all_char_groups[this.state.letter_group][1];\n        letters[2] = this.state.all_char_groups[this.state.letter_group][2];\n    }\n\n    return (\n      <CharGroupGrid chars={letters} handleClick={this.handleCharGridClick}/>\n    );\n  }\n\n  render() {\n    if (this.state.letter_group != null) {\n      return (\n        <center>\n            <div className=\"keyboard\" onClick={() => this.resetCharGroup()}>\n              {this.renderCharGroup()}\n            </div>\n        </center>\n      );\n    } else {\n      return (\n        <center>\n            < br/><br />< br/>< br/>< br/><br />< br/>< br/>\n            <div className=\"keyboard\">\n              <button\n                id=\"top_buttons\"\n                onClick={() => this.clearWord()}\n              >\n                clear\n              </button>\n              <button\n                id=\"top_buttons\"\n                onClick={() => this.delChar()}\n              >\n                del\n              </button>\n              <MainGrid handleClick={this.handleMainGridClick.bind(this)} />\n              <button\n                id=\"space_button\"\n                onClick={() => this.addSpace()}\n              >\n                space\n              </button>\n            </div>\n            <br /><p id=\"current_word\">{this.state.word}</p>\n        </center>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n  <Keyboard />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}